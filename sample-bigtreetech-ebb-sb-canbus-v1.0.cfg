# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid=c29539f216ea

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

#[adxl345]
#cs_pin: EBBCan: PB12
#spi_software_sclk_pin: EBBCan: PB10
#spi_software_mosi_pin: EBBCan: PB11
#spi_software_miso_pin: EBBCan: PB2
#axes_map: z,-y,x

#[resonance_tester]
#probe_points: 150, 150, 20
#accel_chip: adxl345
#accel_per_hz: 75  # default is 75

#[input_shaper]
#shaper_freq_x: 60.6
#shaper_type_x: ei
#shaper_freq_y: 34.6
#shaper_type_y: mzv

#[printer]
#max_accel: 7500  # should not exceed the estimated max_accel for X and Y axes

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 32
gear_ratio: 50:10
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
rotation_distance: 22.849951
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBBCan: PA3
control: pid
pid_Kp: 32.452
pid_Ki: 3.091
pid_Kd: 85.188
min_temp: 0
max_temp: 300
min_extrude_temp: 170
 #sensor_type: Semitec 104NT-4-R025H42G
 #sensor_pin: EBBCan: PA4
 #spi_bus: spi1
 #rtd_nominal_r: 100
 #rtd_reference_r: 430
 #rtd_num_of_wires: 2
max_extrude_cross_section: 5
pressure_advance: 0.1774

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 999999

# [tmc2240 extruder]
# cs_pin: EBBCan: PA15
# spi_software_sclk_pin: EBBCan: PB10
# spi_software_mosi_pin: EBBCan: PB11
# spi_software_miso_pin: EBBCan: PB2
# driver_TPFD: 0
# run_current: 0.650
# stealthchop_threshold: 999999

[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50

#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

#[bltouch]
#sensor_pin: ^EBBCan: PB8
#control_pin: EBBCan: PB9

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#pin: ^EBBCan: PC13
#z_offset: 0.4
#activate_gcode:
    #{% set PROBE_TEMP = 150 %}
    #{% set MAX_TEMP = PROBE_TEMP + 5 %}
    #{% set ACTUAL_TEMP = printer.extruder.temperature %}
    #{% set TARGET_TEMP = printer.extruder.target %}

    #{% if TARGET_TEMP > PROBE_TEMP %}
        #{ action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        #M109 S{ PROBE_TEMP }
    #{% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        #{% if ACTUAL_TEMP > MAX_TEMP %}
            #{ action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            #TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
       #{% endif %}
    #{% endif %}
    
#[output_pin PB5]
#pin: EBBCan: PB5

#[output_pin PB7]
#pin: EBBCan: PB7

#[output_pin PB6]
#pin: EBBCan: PB6